# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:9.11
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}
        
      # run tests!
      - run: npm run test

      # upload coverage!
      - run: npm run report-coverage

      - save_cache:
          paths:
            - .
          key: v1-dist{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}

  # The deploy job
  deploy:
      working_directory: ~/project
      docker:
          - image: circleci/node:9.11
      steps:
          # Log the current branch
          - run:
              name: Show current branch
              command: echo ${CIRCLE_BRANCH}
          # Restore cache from the build job which contains the
          # dist folder that needs to be deployed
          - restore_cache:
              key: v1-dist{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          # Set the signature version for the S3 auth
          - run:
              name: Setting Signature Version 4 for S3 Request Authentication
              command: aws configure set default.s3.signature_version s3v4
          # Deploy to the EC2
          - run:
              name: Deploy to EC2
              command: |
                  if [ "${CIRCLE_BRANCH}" == "master" ]; then
                      ssh -i ".circleci/amazon-node.pem" ubuntu@ec2-52-15-65-252.us-east-2.compute.amazonaws.com
                  fi
          # Log the current branch
          - run:
              name: Show current place
              command: ls && pwd
          - run: 
              name: start command
              command: |
                  if [ "${CIRCLE_BRANCH}" == "master" ]; then
                      cd superhero-test && docker-compose down && docker-compose build && docker-compose up -d
                  fi
workflows:
    version: 2
    # The build and deploy workflow
    build_and_deploy:
        jobs:
            - build
            # The deploy job will only run on the filtered branches and
            # require the build job to be successful before it starts
            - deploy:
                requires:
                    - build
                filters:
                    branches:
                        only:
                            - develop
                            - staging
                            - master